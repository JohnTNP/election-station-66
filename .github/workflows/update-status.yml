# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Update Status

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Rename fallback file if input is missing
      run: |
        if [ ! -f station66_distinct.csv ] && [ -f station66_distinct_clean.csv ]; then
          echo "⚠️ Input file not found. Renaming fallback file..."
          mv station66_distinct_clean.csv station66_distinct.csv
        fi
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run script and capture logs
      run: |
        python geocoding_script.py > geocoding_script.log 2>&1
    
    - name: Generate new content and update README
      run: |
        # Define marker and end marker
        START_MARKER="## 📊 สถานะ"
        END_MARKER="---"
        
        # Define keywords
        KEYWORDS=("เสร็จสิ้นแล้ว:" "เกิดข้อผิดพลาด:" "รอดำเนินการ:")
        
        # Extract one line per keyword
        OUTPUT=""
        for kw in "${KEYWORDS[@]}"; do
          LINE=$(grep -F "$kw" geocoding_script.log | tail -n 1)
          OUTPUT="${OUTPUT}${LINE}\n"
        done
        
        # Replace content between markers
        awk -v start="$START_MARKER" -v end="$END_MARKER" -v output="$OUTPUT" '
          $0 == start {
            print
            print output
            skip=1
            next
          }
          skip && $0 == end {
            print
            skip=0
            next
          }
          skip { next }
          { print }
        ' readme.md > readme.tmp && mv readme.tmp readme.md

    - name: Commit changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add readme.md
        git commit -m "Update README.md via GitHub Actions" || echo "No changes to commit"

    - name: Push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push origin HEAD

